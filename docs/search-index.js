var searchIndex = JSON.parse('{\
"anyhow":{"doc":"github crates-io docs-rs","t":[3,8,3,5,6,14,11,11,14,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10],"n":["Chain","Context","Error","Ok","Result","anyhow","as_ref","as_ref","bail","borrow","borrow","borrow_mut","borrow_mut","chain","clone","clone_into","context","context","default","deref","deref_mut","downcast","downcast_mut","downcast_ref","drop","ensure","fmt","fmt","from","from","from","from","into","into","into_iter","is","len","msg","new","new","next","next_back","root_cause","size_hint","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_context"],"q":["anyhow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Iterator of a chain of source errors.","Provides the <code>context</code> method for <code>Result</code>.","The <code>Error</code> type, a wrapper around a dynamic error type.","Equivalent to Ok::<_, anyhow::Error>(value).","<code>Result<T, Error></code>","Construct an ad-hoc error from a string or existing non-…","","","Return early with an error.","","","","","An iterator of the chain of source errors contained by …","","","Wrap the error value with additional context.","Wrap the error value with additional context.","","","","Attempt to downcast the error object to a concrete type.","Downcast this error object by mutable reference.","Downcast this error object by reference.","","Return early with an error if a condition is not …","","","","","","","","","","Returns true if <code>E</code> is the type held by this error object.","","Create a new error object from a printable error message.","Create a new error object from any error type.","","","","The lowest level cause of this error — this error’s …","","","","","","","","","","Wrap the error value with additional context that is …"],"i":[0,0,0,0,0,0,1,1,0,1,2,1,2,1,2,2,3,1,2,1,1,1,1,1,1,0,1,1,1,1,1,2,1,2,2,1,2,1,1,2,2,2,1,2,2,1,1,2,1,2,1,2,3],"f":[null,null,null,[[],["result",6]],null,null,[[],["stderror",8]],[[],["stderror",8]],null,[[]],[[]],[[]],[[]],[[],["chain",3]],[[],["chain",3]],[[]],[[],[["error",3],["result",6]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["option",4]],[[],["option",4]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["usize",15]],[[]],[[]],[[["stderror",8]]],[[],["option",4]],[[],["option",4]],[[],["stderror",8]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],[["error",3],["result",6]]]],"p":[[3,"Error"],[3,"Chain"],[8,"Context"]]},\
"argtool":{"doc":"","t":[0,0,3,4,4,13,13,13,13,13,13,11,12,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,12,11,11,12,11,11,11,11,11],"n":["argitem","argroup","ArgItem","ArgType","ArgValue","BaseType","FlagType","ListType","PositionalType","STR","VEC","add_alias","alias","arg_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","default","detail","fmt","fmt","from","from","from","get_bool","get_f32","get_i32","get_string","get_vec","into","into","into","name","new","push_vec","required","set_argtype","set_default","set_detail","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ArgGroup","add_arg","borrow","borrow_mut","default","discription","from","into","name","new","parse","try_from","try_into","type_id"],"q":["argtool","","argtool::argitem","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","argtool::argroup","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,1,1,2,2,3,3,3,1,3,2,1,3,2,2,2,3,3,3,2,2,1,3,2,2,2,2,2,2,1,3,2,3,3,2,3,3,3,3,2,2,1,3,2,1,3,2,1,3,2,0,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":[null,null,null,null,null,null,null,null,null,null,null,[[["str",15]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["argvalue",4]],[[]],[[],["argitem",3]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],[["bool",15],["error",3],["result",4]]],[[],[["result",4],["f32",15],["error",3]]],[[],[["i32",15],["error",3],["result",4]]],[[],[["string",3],["result",4],["error",3]]],[[],[["error",3],["result",4],["vec",3]]],[[]],[[]],[[]],null,[[["str",15]],["argitem",3]],[[["string",3]],[["result",4],["error",3]]],null,[[["argtype",4]]],[[["bool",15],["str",15]]],[[["str",15]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["argitem",3]],[["result",4],["error",3]]],[[]],[[]],[[],["arggroup",3]],null,[[]],[[]],null,[[["string",3]],["arggroup",3]],[[],[["error",3],["result",4],["hashmap",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[4,"ArgType"],[4,"ArgValue"],[3,"ArgItem"],[3,"ArgGroup"]]},\
"grep":{"doc":"","t":[5],"n":["main"],"q":["grep"],"d":[""],"i":[0],"f":[[[]]],"p":[]}\
}');
initSearch(searchIndex);